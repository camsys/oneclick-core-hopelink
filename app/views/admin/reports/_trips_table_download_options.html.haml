-# TRIP PLANNED DATE RANGE
=f.input :trip_time_from_date, required: false,
  input_html: {class: 'datepicker', value: Date.today - 1.month},
  as: :string, label: "From Date"
=f.input :trip_time_to_date, required: false,
  input_html: {class: 'datepicker', value: Date.today},
  as: :string, label: "To Date"

-# FILTER OUT TRIPS NOT CREATED IN ONE CLICK
- if in_travel_patterns_mode?
  =f.hidden_field :trip_only_created_in_1click, value: true

-# TRIP PURPOSES
- unless in_travel_patterns_mode?
  .purposes-filter
    - if Config.dashboard_mode == "travel_patterns" && (current_user.transportation_user? || current_user.currently_transportation?)
      - purposes_collection = Purpose.for_user(current_user).map{|p| ["#{p[:name]}", p[:id]]}.sort_by { |p| p[0].downcase }
    - else
      - purposes_collection = Purpose.all.map{|p| ["#{p[:name]}", p[:id]]}.sort_by { |p| p[0].downcase }
    = f.input :purposes, required: false,
        collection: purposes_collection,
        as: :check_boxes,
        label: "Trip Purpose"

-# Oversight Agency
- unless Config.dashboard_mode == "travel_patterns"
  = f.input :oversight_agency, required: false,
      collection: OversightAgency.all,
      value_method: :id,
      label: "Planned By"

-# Only Ecolane Denied Trips
- if Config.dashboard_mode.to_sym == :travel_patterns
  = f.input :ecolane_denied_trips_only, as: :boolean, label: "Only Ecolane Denied Trips", checked: true

-# TRIP ORIGIN REGION BUILDER
- if can?(:manage, :trip_origin_region)
  = render partial: 'admin/services/region_builder',
    locals: { wrapper_id: 'trip-origin-recipe', label_text: "Origin" }
  = f.input :trip_origin_recipe, as: :hidden, input_html: { value: '[]' }

-# TRIP DESTINATION REGION BUILDER
- if can?(:manage, :trip_destination_region)
  = render partial: 'admin/services/region_builder',
    locals: { wrapper_id: 'trip-destination-recipe', label_text: "Destination" }
  = f.input :trip_destination_recipe, as: :hidden, input_html: { value: '[]' }

= "NOTE: Reports will be limited to #{CSVWriter::DEFAULT_RECORD_LIMIT} records!"

:javascript
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize the region builders for trip origin and destination
    const tripOriginRecipe = new M.Recipe({
      container: document.getElementById('trip-origin-recipe'),
      recipeInput: document.getElementById('download_table_trip_origin_recipe'),
      searchPath: '#{admin_autocomplete_path}',
      ingredientLabelTag: '#{escape_javascript render partial: "admin/geographies/ingredient_label"}'
    });

    const tripDestinationRecipe = new M.Recipe({
      container: document.getElementById('trip-destination-recipe'),
      recipeInput: document.getElementById('download_table_trip_destination_recipe'),
      searchPath: '#{admin_autocomplete_path}',
      ingredientLabelTag: '#{escape_javascript render partial: "admin/geographies/ingredient_label"}'
    });

    // Auto-check the Ecolane Denied Trips checkbox on page load if in travel patterns mode
    const ecolaneCheckbox = document.getElementById('download_table_ecolane_denied_trips_only');
    if (ecolaneCheckbox) {
      ecolaneCheckbox.checked = true;
    }

    // Enable the input fields for Transportation Agency Admins
    const userRole = document.getElementById('user-role')?.dataset?.role;
    if (userRole === 'transportation_admin') {
      document.getElementById('trip-origin-recipe').removeAttribute('disabled');
      document.getElementById('trip-destination-recipe').removeAttribute('disabled');
    }
  });
